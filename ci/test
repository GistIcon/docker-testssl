#!/bin/bash
set -e
set -u
set -o pipefail

################################################################################
# Run the test harness. Invoke as "ci/test".
################################################################################

. ci/bootstrap
. ci/helpers.sh

. ci/vars

if command -v shellcheck &>/dev/null; then
  shellcheck ci/vars
fi

echo
echo '====> Check for things like trailing whitespace.'
pre-commit run --all-files --verbose

echo
echo '====> Test that images have correct versions.'
docker-compose -f docker-compose.ci.yaml run stable --version | grep "^[[:space:]]*testssl.sh.*${STABLE_BRANCH}"
docker-compose -f docker-compose.ci.yaml run dev --version | grep -E "^[[:space:]]*testssl.sh.*(${DEV_BRANCH}|beta)"

echo
echo '====> Test SSL of a website.'
docker-compose -f docker-compose.ci.yaml run stable --heartbleed --ip one https://www.google.com/
docker-compose -f docker-compose.ci.yaml run dev --heartbleed --ip one https://www.google.com/

echo
echo '====> Check labels.'
# Ensure each image has labels.
docker inspect \
  -f '{{ index .Config.Labels "io.github.jumanjiman.vcs-ref" }}' \
  testssl:"${STABLE_BRANCH}" | grep "${VCS_REF}"
docker inspect \
  -f '{{ index .Config.Labels "io.github.jumanjiman.vcs-ref" }}' \
  testssl:"${DEV_BRANCH}" | grep "${VCS_REF}"

# We only apply this label for hands-free builds in CI.
if is_ci; then
  docker inspect \
    -f '{{ index .Config.Labels "io.github.jumanjiman.ci-build-url" }}' \
    testssl:"${STABLE_BRANCH}" | grep circleci.com
  docker inspect \
    -f '{{ index .Config.Labels "io.github.jumanjiman.ci-build-url" }}' \
    testssl:"${DEV_BRANCH}" | grep circleci.com
fi

echo
echo
